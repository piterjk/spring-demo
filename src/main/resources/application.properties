spring.application.name=springboot-demo
# application.properties
spring.profiles.active=dev


########################################################################################################################
# View Resolver 설정 (JSP 사용)
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

########################################################################################################################
# error handler
server.error.path=/error

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-exception=true
server.error.include-stacktrace=on_param
server.error.whitelabel.enabled=true

########################################################################################################################
# 기본 SQL 쿼리 출력 (바인딩된 값 없이 ? 만 출력됨)
spring.jpa.show-sql=true

########################################################################################################################
# Hibernate가 실행한 최종 SQL과 바인딩된 값 출력
logging.level.org.hibernate.SQL=DEBUG
# ✅ Hibernate가 바인딩된 값도 출력하도록 설정 추가 (Hibernate 6.x 기준)
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.org.hibernate.orm.jdbc.extract=TRACE

# ✅ Hibernate 예외 발생 시 SQL을 기록하는 설정 추가
logging.level.org.hibernate.exception.internal.StandardSQLExceptionConverter=TRACE
logging.level.org.hibernate.resource.jdbc.spi.SqlExceptionHelper=ERROR

# Spring JDBC 쿼리 로그 활성화
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
