spring.application.name=springboot-demo

server.port=8080

spring.datasource.jdbc-url=jdbc:postgresql://localhost:5432/springdemo?loggerLevel=TRACE&loggerFile=postgresql.log
spring.datasource.url=jdbc:postgresql://localhost:5432/springdemo?loggerLevel=TRACE&loggerFile=postgresql.log
spring.datasource.username=piterjk
spring.datasource.password=Tnwjd0618p!
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

# ✅ Hibernate가 PostgreSQL에서 시퀀스를 자동으로 사용하도록 설정
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED


# HikariCP 설정 (선택 사항)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

# JPA 설정 (JPA 사용 시)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
# Spring Batch 비활성화 (Batch 사용하지 않을 경우)
spring.batch.jdbc.initialize-schema=never
spring.batch.enabled=false


# View Resolver 설정 (JSP 사용)
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp


#spring.security.user.name=piterjk
#spring.security.user.password=piterjk


# ?? ?? ?? ??
logging.level.root=INFO

# ?? ??? ?? ?? ??
logging.level.org.springframework=DEBUG
logging.level.com.example.myapp=TRACE

# ?? ?? ?? (Logback ?? ?)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n


server.error.path=/error

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-exception=true
server.error.include-stacktrace=on_param
server.error.whitelabel.enabled=true



# 기본 SQL 쿼리 출력 (바인딩된 값 없이 ? 만 출력됨)
spring.jpa.show-sql=true

# Hibernate가 실행한 최종 SQL과 바인딩된 값 출력
logging.level.org.hibernate.SQL=DEBUG
# ✅ Hibernate가 바인딩된 값도 출력하도록 설정 추가 (Hibernate 6.x 기준)
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.org.hibernate.orm.jdbc.extract=TRACE

# ✅ Hibernate 예외 발생 시 SQL을 기록하는 설정 추가
logging.level.org.hibernate.exception.internal.StandardSQLExceptionConverter=TRACE
logging.level.org.hibernate.resource.jdbc.spi.SqlExceptionHelper=ERROR

# Spring JDBC 쿼리 로그 활성화
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE


